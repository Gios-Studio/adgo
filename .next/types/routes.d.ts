// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never;
type PageRoutes =
  | "/"
  | "/404"
  | "/AdUpload"
  | "/AdUploadFilters"
  | "/Admin"
  | "/CampaignCalendar"
  | "/EnvDebug"
  | "/MyAds"
  | "/ad-upload-filters"
  | "/ad-upload-page"
  | "/admin-page"
  | "/admin/review"
  | "/ads/upload"
  | "/analytics"
  | "/campaign-calendar"
  | "/cookie-policy"
  | "/dashboard"
  | "/dashboard/ad-upload"
  | "/dashboard/advertiser"
  | "/dashboard/audit"
  | "/dashboard/driver"
  | "/dashboard/driver-report"
  | "/dashboard/driver-wallet"
  | "/dashboard/partner"
  | "/dashboard/partner-report"
  | "/dashboard/telemetry"
  | "/dev/events-test"
  | "/env-debug"
  | "/landing"
  | "/login"
  | "/my-ads"
  | "/privacy-policy"
  | "/settings"
  | "/signup"
  | "/terms-of-service"
  | "/test-simple"
  | "/waitlist"
  | "/wallet";
type LayoutRoutes = never;
type RedirectRoutes = never;
type RewriteRoutes = never;
type Routes =
  | AppRoutes
  | PageRoutes
  | LayoutRoutes
  | RedirectRoutes
  | RewriteRoutes;

interface ParamMap {
  "/": {};
  "/404": {};
  "/ad-upload-filters": {};
  "/ad-upload-page": {};
  "/Admin": {};
  "/admin-page": {};
  "/admin/review": {};
  "/ads/upload": {};
  "/AdUpload": {};
  "/AdUploadFilters": {};
  "/analytics": {};
  "/campaign-calendar": {};
  "/CampaignCalendar": {};
  "/cookie-policy": {};
  "/dashboard": {};
  "/dashboard/ad-upload": {};
  "/dashboard/advertiser": {};
  "/dashboard/audit": {};
  "/dashboard/driver": {};
  "/dashboard/driver-report": {};
  "/dashboard/driver-wallet": {};
  "/dashboard/partner": {};
  "/dashboard/partner-report": {};
  "/dashboard/telemetry": {};
  "/dev/events-test": {};
  "/env-debug": {};
  "/EnvDebug": {};
  "/landing": {};
  "/login": {};
  "/my-ads": {};
  "/MyAds": {};
  "/privacy-policy": {};
  "/settings": {};
  "/signup": {};
  "/terms-of-service": {};
  "/test-simple": {};
  "/waitlist": {};
  "/wallet": {};
}

export type ParamsOf<Route extends Routes> = ParamMap[Route];

interface LayoutSlotMap {}

export type {
  AppRoutes,
  PageRoutes,
  LayoutRoutes,
  RedirectRoutes,
  RewriteRoutes,
  ParamMap,
};

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>;
    searchParams: Promise<Record<string, string | string[] | undefined>>;
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>;
    children: React.ReactNode;
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode;
  };
}

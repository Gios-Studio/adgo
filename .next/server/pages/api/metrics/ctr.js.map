{"version":3,"file":"pages/api/metrics/ctr.js","mappings":"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","sources":["webpack://_N_E/./src/pages/api/metrics/ctr.ts","webpack://_N_E/?c05d","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/./src/lib/performanceCache.ts"],"sourcesContent":["/**\n * AdGo Platform - Advanced Advertising Technology Suite\n * \n * Copyright (c) 2025 AdGo Solutions Limited.\n * All rights reserved.\n * \n * This source code is proprietary and confidential.\n * Unauthorized copying, modification, distribution, or use of this file,\n * via any medium, is strictly prohibited without explicit written consent.\n * \n * For licensing information, please contact: legal@adgosolutions.com\n * \n * Build: 20251015_073830\n * Generated: 2025-10-15 04:38:36 UTC\n */\n\nimport type { NextApiRequest, NextApiResponse } from \"next\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport { z } from 'zod';\nimport { performanceCache } from '../../../lib/performanceCache';\n\n// Edge Runtime Configuration  \nexport const runtime = \"edge\";\nexport const dynamic = \"force-dynamic\";\nexport const revalidate = 60;\n\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.SUPABASE_SERVICE_ROLE_KEY!);\n\n// Zod schemas for parameter validation\nconst MetricsQuerySchema = z.object({\n  campaign_id: z.string().uuid().optional(),\n  partner_id: z.string().uuid().optional(), \n  period: z.enum(['1h', '24h', '7d', '30d']).default('24h'),\n  format: z.enum(['json', 'csv']).default('json').optional()\n});\n\n// Enhanced metrics response schema\nconst MetricsResponseSchema = z.object({\n  period: z.string(),\n  impressions: z.number().int().min(0),\n  clicks: z.number().int().min(0),\n  conversions: z.number().int().min(0).optional(),\n  ctr: z.number().min(0).max(100),\n  conversionRate: z.number().min(0).max(100).optional(),\n  timestamp: z.string().datetime()\n});\n\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n  try {\n    // Validate query parameters with Zod\n    const validationResult = MetricsQuerySchema.safeParse(req.query);\n    \n    if (!validationResult.success) {\n      return res.status(400).json({ \n        error: \"invalid_parameters\",\n        details: validationResult.error.issues \n      });\n    }\n    \n    const { campaign_id, period, partner_id, format } = validationResult.data;\n    \n    // Check cache first (60-second TTL for improved performance)\n    const cacheKey = `metrics|${campaign_id || 'all'}|${partner_id || 'all'}|${period}|${format || 'json'}`;\n    const cachedResult = performanceCache.get(cacheKey);\n    \n    if (cachedResult) {\n      // Add cache hit header for monitoring\n      res.setHeader('X-Cache', 'HIT');\n      res.setHeader('X-Cache-Key', cacheKey);\n      res.setHeader('X-Cache-TTL', '60');\n      res.setHeader('Cache-Control', 'public, max-age=60, s-maxage=120');\n      return res.status(200).json(cachedResult);\n    }\n    \n    // Cache miss - proceed with database query\n    res.setHeader('X-Cache', 'MISS');\n    res.setHeader('X-Cache-Key', cacheKey);\n    res.setHeader('X-Cache-TTL', '60');\n    res.setHeader('Cache-Control', 'public, max-age=60, s-maxage=120');\n    \n    // If no specific campaign, return overall metrics\n    if (!campaign_id && !partner_id) {\n      return await getOverallMetrics(req, res, period, format);\n    }\n    \n    // If campaign_id provided, return campaign-specific metrics\n    if (campaign_id) {\n      return await getCampaignMetrics(req, res, campaign_id, format);\n    }\n    \n    // If partner_id provided, return partner-specific metrics\n    if (partner_id) {\n      return await getPartnerMetrics(req, res, partner_id, period, format);\n    }\n    \n    return res.status(400).json({ error: \"missing_required_parameters\" });\n  } catch (error: any) {\n    console.error('Metrics API Error:', error);\n    return res.status(500).json({ \n      error: \"internal_server_error\", \n      message: error.message,\n      timestamp: new Date().toISOString()\n    });\n  }\n}\n\n// Get overall platform metrics\nasync function getOverallMetrics(req: NextApiRequest, res: NextApiResponse, period: string, format?: string) {\n  try {\n    // Calculate date range based on period\n    const now = new Date();\n    const startDate = new Date();\n    \n    switch (period) {\n      case '1h':\n        startDate.setHours(now.getHours() - 1);\n        break;\n      case '24h':\n        startDate.setDate(now.getDate() - 1);\n        break;\n      case '7d':\n        startDate.setDate(now.getDate() - 7);\n        break;\n      case '30d':\n        startDate.setDate(now.getDate() - 30);\n        break;\n      default:\n        startDate.setDate(now.getDate() - 1);\n    }\n    \n    // Try to use materialized view for better performance\n    let impressions = 0, clicks = 0, conversions = 0;\n    \n    try {\n      // Select appropriate time-based columns from materialized view\n      let selectColumns = 'impressions, clicks, conversions';\n      if (period === '24h') {\n        selectColumns = 'impressions_24h, clicks_24h, conversions_24h';\n      } else if (period === '7d') {\n        selectColumns = 'impressions_7d, clicks_7d, conversions_7d';  \n      }\n      \n      const { data: aggregated, error: viewError } = await supabase\n        .from('campaign_metrics')\n        .select(selectColumns);\n      \n      if (!viewError && aggregated?.length > 0) {\n        // Sum metrics from materialized view\n        for (const row of aggregated) {\n          if (period === '24h') {\n            impressions += (row as any).impressions_24h || 0;\n            clicks += (row as any).clicks_24h || 0;\n            conversions += (row as any).conversions_24h || 0;\n          } else if (period === '7d') {\n            impressions += (row as any).impressions_7d || 0;\n            clicks += (row as any).clicks_7d || 0;\n            conversions += (row as any).conversions_7d || 0;\n          } else {\n            impressions += (row as any).impressions || 0;\n            clicks += (row as any).clicks || 0;\n            conversions += (row as any).conversions || 0;\n          }\n        }\n      } else {\n        throw new Error('Materialized view not available');\n      }\n    } catch (fallbackError) {\n      // Fallback to direct query if materialized view fails\n      const { data: events, error } = await supabase\n        .from('analytics_events')\n        .select('event_type, created_at')\n        .gte('created_at', startDate.toISOString());\n      \n      if (error) throw error;\n      \n      impressions = events?.filter(e => e.event_type === 'impression').length || 0;\n      clicks = events?.filter(e => e.event_type === 'click').length || 0;\n      conversions = events?.filter(e => e.event_type === 'conversion').length || 0;\n    }\n    \n    const ctr = impressions > 0 ? ((clicks / impressions) * 100) : 0;\n    const conversionRate = clicks > 0 ? ((conversions / clicks) * 100) : 0;\n    \n    return res.status(200).json({\n      period,\n      impressions,\n      clicks,\n      conversions,\n      ctr: Number(ctr.toFixed(2)),\n      conversionRate: Number(conversionRate.toFixed(2)),\n      timestamp: new Date().toISOString()\n    });\n  } catch (error: any) {\n    console.error('Overall metrics error:', error);\n    return res.status(500).json({ error: 'Failed to get overall metrics' });\n  }\n}\n\n// Get campaign-specific metrics\nasync function getCampaignMetrics(req: NextApiRequest, res: NextApiResponse, campaign_id: string, format?: string) {\n  try {\n    // Check cache first\n    const cacheKey = `campaign_metrics|${campaign_id}|${format || 'json'}`;\n    const cachedResult = performanceCache.get(cacheKey);\n    \n    if (cachedResult) {\n      res.setHeader('X-Cache', 'HIT');\n      res.setHeader('X-Cache-Key', cacheKey);\n      return res.status(200).json(cachedResult);\n    }\n    \n    res.setHeader('X-Cache', 'MISS');\n    res.setHeader('X-Cache-Key', cacheKey);\n    \n    const { data, error } = await supabase\n      .from(\"campaign_ctr\")\n      .select(\"*\")\n      .eq(\"campaign_id\", campaign_id)\n      .maybeSingle();\n    \n    if (error && error.code !== 'PGRST116') throw error;\n    \n    // If no data in campaign_ctr table, calculate from analytics_events\n    if (!data) {\n      const { data: events, error: eventsError } = await supabase\n        .from('analytics_events')\n        .select('event_type')\n        .eq('campaign_id', campaign_id);\n      \n      if (eventsError) throw eventsError;\n      \n      const impressions = events?.filter(e => e.event_type === 'impression').length || 0;\n      const clicks = events?.filter(e => e.event_type === 'click').length || 0;\n      const ctr = impressions > 0 ? ((clicks / impressions) * 100) : 0;\n      \n      const response = {\n        campaign_id,\n        impressions,\n        clicks,\n        ctr: Number(ctr.toFixed(2)),\n        calculated: true\n      };\n      \n      performanceCache.set(cacheKey, response, 60000); // 60 second TTL\n      return res.status(200).json(response);\n    }\n    \n    performanceCache.set(cacheKey, data, 60000); // 60 second TTL\n    return res.status(200).json(data);\n  } catch (error: any) {\n    console.error('Campaign metrics error:', error);\n    return res.status(500).json({ error: 'Failed to get campaign metrics' });\n  }\n}\n\n// Get partner-specific metrics\nasync function getPartnerMetrics(req: NextApiRequest, res: NextApiResponse, partner_id: string, period: string, format?: string) {\n  try {\n    // Check cache first\n    const cacheKey = `partner_metrics|${partner_id}|${period}|${format || 'json'}`;\n    const cachedResult = performanceCache.get(cacheKey);\n    \n    if (cachedResult) {\n      res.setHeader('X-Cache', 'HIT');\n      res.setHeader('X-Cache-Key', cacheKey);\n      return res.status(200).json(cachedResult);\n    }\n    \n    res.setHeader('X-Cache', 'MISS');\n    res.setHeader('X-Cache-Key', cacheKey);\n    \n    // Get partner campaigns\n    const { data: campaigns, error: campaignError } = await supabase\n      .from('campaigns')\n      .select('id')\n      .eq('partner_id', partner_id);\n    \n    if (campaignError) throw campaignError;\n    \n    if (!campaigns || campaigns.length === 0) {\n      const response = {\n        partner_id,\n        period,\n        impressions: 0,\n        clicks: 0,\n        ctr: 0,\n        campaigns: 0\n      };\n      \n      performanceCache.set(cacheKey, response, 60000); // 60 second TTL\n      return res.status(200).json(response);\n    }\n    \n    const campaignIds = campaigns.map(c => c.id);\n    \n    // Get events for partner campaigns\n    const { data: events, error: eventsError } = await supabase\n      .from('analytics_events')\n      .select('event_type, campaign_id')\n      .in('campaign_id', campaignIds);\n    \n    if (eventsError) throw eventsError;\n    \n    const impressions = events?.filter(e => e.event_type === 'impression').length || 0;\n    const clicks = events?.filter(e => e.event_type === 'click').length || 0;\n    const ctr = impressions > 0 ? ((clicks / impressions) * 100) : 0;\n    \n    const response = {\n      partner_id,\n      period,\n      impressions,\n      clicks,\n      ctr: Number(ctr.toFixed(2)),\n      campaigns: campaigns.length\n    };\n    \n    performanceCache.set(cacheKey, response, 60000); // 60 second TTL\n    return res.status(200).json(response);\n  } catch (error: any) {\n    console.error('Partner metrics error:', error);\n    return res.status(500).json({ error: 'Failed to get partner metrics' });\n  }\n}","\n        import 'next/dist/esm/server/web/globals'\n        import { adapter } from 'next/dist/esm/server/web/adapter'\n        import { IncrementalCache } from 'next/dist/esm/server/lib/incremental-cache'\n        import { wrapApiHandler } from 'next/dist/esm/server/api-utils'\n\n        import handler from \"private-next-pages/api/metrics/ctr.ts\"\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/metrics/ctr\" must export a `default` function');\n        }\n\n        export default function nHandler (opts) {\n          return adapter({\n              ...opts,\n              IncrementalCache,\n              page: \"/api/metrics/ctr\",\n              handler: wrapApiHandler(\"/api/metrics/ctr\", handler),\n          })\n        }\n    ","module.exports = require(\"node:buffer\");","module.exports = require(\"node:async_hooks\");","// AdGo Performance Cache Layer\n// In-memory caching with TTL and logging\n\ninterface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  ttl: number;\n}\n\ninterface CacheStats {\n  hits: number;\n  misses: number;\n  sets: number;\n  size: number;\n}\n\nclass PerformanceCache {\n  private cache = new Map<string, CacheEntry<any>>();\n  private stats: CacheStats = { hits: 0, misses: 0, sets: 0, size: 0 };\n  private readonly DEFAULT_TTL = 30000; // 30 seconds\n  private readonly MAX_SIZE = 1000;\n\n  set<T>(key: string, data: T, ttl: number = this.DEFAULT_TTL): void {\n    // Cleanup expired entries if cache is getting full\n    if (this.cache.size >= this.MAX_SIZE) {\n      this.cleanup();\n    }\n\n    const entry: CacheEntry<T> = {\n      data,\n      timestamp: Date.now(),\n      ttl\n    };\n\n    this.cache.set(key, entry);\n    this.stats.sets++;\n    this.stats.size = this.cache.size;\n    \n    this.logCacheOperation('SET', key, { ttl });\n  }\n\n  get<T>(key: string): T | null {\n    const entry = this.cache.get(key);\n    \n    if (!entry) {\n      this.stats.misses++;\n      this.logCacheOperation('MISS', key);\n      return null;\n    }\n\n    // Check if entry has expired\n    if (Date.now() - entry.timestamp > entry.ttl) {\n      this.cache.delete(key);\n      this.stats.misses++;\n      this.stats.size = this.cache.size;\n      this.logCacheOperation('EXPIRED', key);\n      return null;\n    }\n\n    this.stats.hits++;\n    this.logCacheOperation('HIT', key);\n    return entry.data as T;\n  }\n\n  has(key: string): boolean {\n    const entry = this.cache.get(key);\n    if (!entry) return false;\n    \n    if (Date.now() - entry.timestamp > entry.ttl) {\n      this.cache.delete(key);\n      this.stats.size = this.cache.size;\n      return false;\n    }\n    \n    return true;\n  }\n\n  delete(key: string): boolean {\n    const result = this.cache.delete(key);\n    this.stats.size = this.cache.size;\n    if (result) {\n      this.logCacheOperation('DELETE', key);\n    }\n    return result;\n  }\n\n  clear(): void {\n    this.cache.clear();\n    this.stats.size = 0;\n    this.logCacheOperation('CLEAR', 'all');\n  }\n\n  cleanup(): void {\n    const now = Date.now();\n    let removedCount = 0;\n    \n    for (const [key, entry] of this.cache.entries()) {\n      if (now - entry.timestamp > entry.ttl) {\n        this.cache.delete(key);\n        removedCount++;\n      }\n    }\n    \n    this.stats.size = this.cache.size;\n    \n    if (removedCount > 0) {\n      this.logCacheOperation('CLEANUP', `${removedCount} entries`);\n    }\n  }\n\n  getStats(): CacheStats & { hitRate: number } {\n    const total = this.stats.hits + this.stats.misses;\n    const hitRate = total > 0 ? (this.stats.hits / total) * 100 : 0;\n    \n    return {\n      ...this.stats,\n      hitRate: Math.round(hitRate * 100) / 100\n    };\n  }\n\n  private logCacheOperation(operation: string, key: string, extra?: any): void {\n    const timestamp = new Date().toISOString();\n    const logEntry = {\n      timestamp,\n      operation,\n      key,\n      stats: this.getStats(),\n      ...extra\n    };\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`[CACHE ${operation}] ${key}`, extra || '');\n    }\n\n    // In production, this would write to /logs/cache.log\n    // For now, we'll use console.log with structured format\n    if (process.env.NODE_ENV === 'production') {\n      console.log(JSON.stringify(logEntry));\n    }\n  }\n\n  // Generate cache key for metrics requests\n  static generateMetricsKey(\n    campaign_id?: string, \n    partner_id?: string, \n    period?: string\n  ): string {\n    const parts = ['metrics'];\n    if (campaign_id) parts.push(`campaign:${campaign_id}`);\n    if (partner_id) parts.push(`partner:${partner_id}`);\n    if (period) parts.push(`period:${period}`);\n    return parts.join('|');\n  }\n}\n\n// Global cache instance\nexport const performanceCache = new PerformanceCache();\n\n// Cache statistics endpoint for monitoring\nexport function getCacheStats() {\n  return performanceCache.getStats();\n}\n\nexport default PerformanceCache;"],"names":["supabase","createClient","process","env","SUPABASE_SERVICE_ROLE_KEY","MetricsQuerySchema","z","campaign_id","uuid","optional","partner_id","period","default","format","handler","req","res","validationResult","safeParse","query","success","status","json","error","details","issues","data","cacheKey","cachedResult","performanceCache","get","setHeader","getOverallMetrics","getCampaignMetrics","getPartnerMetrics","console","message","timestamp","Date","toISOString","now","startDate","setHours","getHours","setDate","getDate","impressions","clicks","conversions","selectColumns","aggregated","viewError","from","select","length","row","impressions_24h","clicks_24h","conversions_24h","impressions_7d","clicks_7d","conversions_7d","fallbackError","events","gte","filter","e","event_type","ctr","conversionRate","Number","toFixed","eq","maybeSingle","code","eventsError","response","calculated","set","campaigns","campaignError","campaignIds","map","c","id","in","int","min","max","datetime","PerformanceCache","key","ttl","DEFAULT_TTL","cache","size","MAX_SIZE","cleanup","entry","stats","sets","logCacheOperation","delete","misses","hits","has","result","clear","removedCount","entries","getStats","total","hitRate","Math","round","operation","extra","log","JSON","stringify","generateMetricsKey","parts","push","join","Map"],"sourceRoot":"","ignoreList":[]}
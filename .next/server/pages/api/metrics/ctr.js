"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/metrics/ctr";
exports.ids = ["pages/api/metrics/ctr"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmetrics%2Fctr&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmetrics%2Fctr.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmetrics%2Fctr&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmetrics%2Fctr.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_metrics_ctr_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/pages/api/metrics/ctr.ts */ \"(api-node)/./src/pages/api/metrics/ctr.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_metrics_ctr_ts__WEBPACK_IMPORTED_MODULE_4__]);\n_src_pages_api_metrics_ctr_ts__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_src_pages_api_metrics_ctr_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_src_pages_api_metrics_ctr_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/metrics/ctr\",\n        pathname: \"/api/metrics/ctr\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_metrics_ctr_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/metrics/ctr\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/metrics/ctr\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmetrics%2Fctr&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmetrics%2Fctr.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./src/pages/api/metrics/ctr.ts":
/*!**************************************!*\
  !*** ./src/pages/api/metrics/ctr.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_1__]);\nzod__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/**\n * AdGo Platform - Advanced Advertising Technology Suite\n * \n * Copyright (c) 2025 AdGo Solutions Limited.\n * All rights reserved.\n * \n * This source code is proprietary and confidential.\n * Unauthorized copying, modification, distribution, or use of this file,\n * via any medium, is strictly prohibited without explicit written consent.\n * \n * For licensing information, please contact: legal@adgosolutions.com\n * \n * Build: 20251015_073830\n * Generated: 2025-10-15 04:38:36 UTC\n */ \n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://rkonwkggxaohpmxmzmfn.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\n// Zod schemas for parameter validation\nconst MetricsQuerySchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    campaign_id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().uuid().optional(),\n    partner_id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().uuid().optional(),\n    period: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n        '1h',\n        '24h',\n        '7d',\n        '30d'\n    ]).default('24h'),\n    format: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n        'json',\n        'csv'\n    ]).default('json').optional()\n});\n// Enhanced metrics response schema\nconst MetricsResponseSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    period: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    impressions: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().min(0),\n    clicks: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().min(0),\n    conversions: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().min(0).optional(),\n    ctr: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().min(0).max(100),\n    conversionRate: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().min(0).max(100).optional(),\n    timestamp: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().datetime()\n});\nasync function handler(req, res) {\n    try {\n        // Validate query parameters with Zod\n        const validationResult = MetricsQuerySchema.safeParse(req.query);\n        if (!validationResult.success) {\n            return res.status(400).json({\n                error: \"invalid_parameters\",\n                details: validationResult.error.issues\n            });\n        }\n        const { campaign_id, period, partner_id, format } = validationResult.data;\n        // If no specific campaign, return overall metrics\n        if (!campaign_id && !partner_id) {\n            return await getOverallMetrics(req, res, period, format);\n        }\n        // If campaign_id provided, return campaign-specific metrics\n        if (campaign_id) {\n            return await getCampaignMetrics(req, res, campaign_id, format);\n        }\n        // If partner_id provided, return partner-specific metrics\n        if (partner_id) {\n            return await getPartnerMetrics(req, res, partner_id, period, format);\n        }\n        return res.status(400).json({\n            error: \"missing_required_parameters\"\n        });\n    } catch (error) {\n        console.error('Metrics API Error:', error);\n        return res.status(500).json({\n            error: \"internal_server_error\",\n            message: error.message,\n            timestamp: new Date().toISOString()\n        });\n    }\n}\n// Get overall platform metrics\nasync function getOverallMetrics(req, res, period, format) {\n    try {\n        // Calculate date range based on period\n        const now = new Date();\n        const startDate = new Date();\n        switch(period){\n            case '1h':\n                startDate.setHours(now.getHours() - 1);\n                break;\n            case '24h':\n                startDate.setDate(now.getDate() - 1);\n                break;\n            case '7d':\n                startDate.setDate(now.getDate() - 7);\n                break;\n            case '30d':\n                startDate.setDate(now.getDate() - 30);\n                break;\n            default:\n                startDate.setDate(now.getDate() - 1);\n        }\n        // Try to use materialized view for better performance\n        let impressions = 0, clicks = 0, conversions = 0;\n        try {\n            // Select appropriate time-based columns from materialized view\n            let selectColumns = 'impressions, clicks, conversions';\n            if (period === '24h') {\n                selectColumns = 'impressions_24h, clicks_24h, conversions_24h';\n            } else if (period === '7d') {\n                selectColumns = 'impressions_7d, clicks_7d, conversions_7d';\n            }\n            const { data: aggregated, error: viewError } = await supabase.from('campaign_metrics').select(selectColumns);\n            if (!viewError && aggregated?.length > 0) {\n                // Sum metrics from materialized view\n                for (const row of aggregated){\n                    if (period === '24h') {\n                        impressions += row.impressions_24h || 0;\n                        clicks += row.clicks_24h || 0;\n                        conversions += row.conversions_24h || 0;\n                    } else if (period === '7d') {\n                        impressions += row.impressions_7d || 0;\n                        clicks += row.clicks_7d || 0;\n                        conversions += row.conversions_7d || 0;\n                    } else {\n                        impressions += row.impressions || 0;\n                        clicks += row.clicks || 0;\n                        conversions += row.conversions || 0;\n                    }\n                }\n            } else {\n                throw new Error('Materialized view not available');\n            }\n        } catch (fallbackError) {\n            // Fallback to direct query if materialized view fails\n            const { data: events, error } = await supabase.from('analytics_events').select('event_type, created_at').gte('created_at', startDate.toISOString());\n            if (error) throw error;\n            impressions = events?.filter((e)=>e.event_type === 'impression').length || 0;\n            clicks = events?.filter((e)=>e.event_type === 'click').length || 0;\n            conversions = events?.filter((e)=>e.event_type === 'conversion').length || 0;\n        }\n        const ctr = impressions > 0 ? clicks / impressions * 100 : 0;\n        const conversionRate = clicks > 0 ? conversions / clicks * 100 : 0;\n        return res.status(200).json({\n            period,\n            impressions,\n            clicks,\n            conversions,\n            ctr: Number(ctr.toFixed(2)),\n            conversionRate: Number(conversionRate.toFixed(2)),\n            timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error('Overall metrics error:', error);\n        return res.status(500).json({\n            error: 'Failed to get overall metrics'\n        });\n    }\n}\n// Get campaign-specific metrics\nasync function getCampaignMetrics(req, res, campaign_id, format) {\n    try {\n        const { data, error } = await supabase.from(\"campaign_ctr\").select(\"*\").eq(\"campaign_id\", campaign_id).maybeSingle();\n        if (error && error.code !== 'PGRST116') throw error;\n        // If no data in campaign_ctr table, calculate from analytics_events\n        if (!data) {\n            const { data: events, error: eventsError } = await supabase.from('analytics_events').select('event_type').eq('campaign_id', campaign_id);\n            if (eventsError) throw eventsError;\n            const impressions = events?.filter((e)=>e.event_type === 'impression').length || 0;\n            const clicks = events?.filter((e)=>e.event_type === 'click').length || 0;\n            const ctr = impressions > 0 ? clicks / impressions * 100 : 0;\n            return res.status(200).json({\n                campaign_id,\n                impressions,\n                clicks,\n                ctr: Number(ctr.toFixed(2)),\n                calculated: true\n            });\n        }\n        return res.status(200).json(data);\n    } catch (error) {\n        console.error('Campaign metrics error:', error);\n        return res.status(500).json({\n            error: 'Failed to get campaign metrics'\n        });\n    }\n}\n// Get partner-specific metrics\nasync function getPartnerMetrics(req, res, partner_id, period, format) {\n    try {\n        // Get partner campaigns\n        const { data: campaigns, error: campaignError } = await supabase.from('campaigns').select('id').eq('partner_id', partner_id);\n        if (campaignError) throw campaignError;\n        if (!campaigns || campaigns.length === 0) {\n            return res.status(200).json({\n                partner_id,\n                period,\n                impressions: 0,\n                clicks: 0,\n                ctr: 0,\n                campaigns: 0\n            });\n        }\n        const campaignIds = campaigns.map((c)=>c.id);\n        // Get events for partner campaigns\n        const { data: events, error: eventsError } = await supabase.from('analytics_events').select('event_type, campaign_id').in('campaign_id', campaignIds);\n        if (eventsError) throw eventsError;\n        const impressions = events?.filter((e)=>e.event_type === 'impression').length || 0;\n        const clicks = events?.filter((e)=>e.event_type === 'click').length || 0;\n        const ctr = impressions > 0 ? clicks / impressions * 100 : 0;\n        return res.status(200).json({\n            partner_id,\n            period,\n            impressions,\n            clicks,\n            ctr: Number(ctr.toFixed(2)),\n            campaigns: campaigns.length\n        });\n    } catch (error) {\n        console.error('Partner metrics error:', error);\n        return res.status(500).json({\n            error: 'Failed to get partner metrics'\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/pages/api/metrics/ctr.ts\n");

/***/ }),

/***/ "@opentelemetry/api":
/*!*************************************!*\
  !*** external "@opentelemetry/api" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@opentelemetry/api");

/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmetrics%2Fctr&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmetrics%2Fctr.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();
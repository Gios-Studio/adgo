import { serve } from "https://deno.land/std@0.177.0/http/server.ts";
import { createClient } from "https://esm.sh/@supabase/supabase-js@2";

const supabase = createClient(Deno.env.get("SUPABASE_URL")!, Deno.env.get("SUPABASE_SERVICE_ROLE_KEY")!);

serve(async (req) => {
  try {
    const { ride_id, campaign_id, ad_id, device_id, ip, user_id, org_id } = await req.json();
    const { data, error } = await supabase
      .from("clicks")
      .insert({ ride_id, campaign_id, ad_id, device_id, ip, user_id, org_id, validated: false })
      .select()
      .single();
    if (error) throw error;
    // Immediately validate so DB trigger runs
    const { data: updated, error: updateError } = await supabase
      .from("clicks")
      .update({ validated: true })
      .eq("id", data.id)
      .select()
      .single();
    if (updateError) throw updateError;
    return new Response(JSON.stringify(updated), { headers: { "Content-Type": "application/json" } });
  } catch (e) {
    return new Response(JSON.stringify({ error: e.message }), { status: 400 });
  }
});

name: AdGo CI/CD Pipeline (Golden)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  id-token: write

jobs:
  setup:
    name: üß© Environment Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

  migrate:
    name: üß± Supabase DB Migration
    runs-on: ubuntu-latest
    needs: setup
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Supabase CLI
        run: |
          brew install supabase/tap/supabase
          supabase --version

      - name: Push database migrations
        run: supabase db push --db-url "${{ env.SUPABASE_DB_URL }}"

  build:
    name: üèóÔ∏è Build & Lint
    runs-on: ubuntu-latest
    needs: migrate
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint --if-present

      - name: Build Next.js project
        run: npm run build

  deploy:
    name: üöÄ Deploy to Production (Vercel)
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - uses: actions/checkout@v4

      - name: Deploy via Vercel CLI
        run: |
          npm install -g vercel
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
name: AdGo CI/CD

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  deployments: write

env:
  NODE_VERSION: '20'

jobs:
  db-migrate:
    name: 🗄️ Database Migration
    runs-on: ubuntu-latest
    
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: � Install Supabase CLI
        run: |
          curl -sL https://github.com/supabase/cli/releases/download/v1.154.1/supabase_1.154.1_linux_amd64.tar.gz | tar xz
          sudo mv supabase /usr/local/bin/supabase

      - name:  Link to Supabase project
        run: |
          echo "🔗 Linking to Supabase project..."
          supabase link --project-ref $SUPABASE_PROJECT_ID --access-token $SUPABASE_ACCESS_TOKEN
          echo "✅ Successfully linked to Supabase project"

      - name: 🗄️ Apply database migrations
        run: |
          echo "🚀 Applying database migrations..."
          supabase db push --db-url "$SUPABASE_DB_URL"
          echo "✅ Database migrations applied successfully"

  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest
    needs: db-migrate
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📋 Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 🏗️ Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: |
          echo "🔍 Running ESLint..."
          npm run lint
          if [ $? -eq 0 ]; then
            echo "✅ Linting passed"
          else
            echo "❌ Linting failed"
            exit 1
          fi

      - name: 🧪 Run tests
        run: |
          echo "🧪 Running test suite..."
          npm run test
          if [ $? -eq 0 ]; then
            echo "✅ Tests passed"
          else
            echo "❌ Tests failed"
            exit 1
          fi

  build-and-deploy:
    name: 🚀 Build & Deploy
    runs-on: ubuntu-latest
    needs: test

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📋 Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 🏗️ Install dependencies
        run: npm ci

      - name: 🔨 Build Next.js project
        run: |
          echo "🔨 Building Next.js application..."
          npm run build
          if [ $? -eq 0 ]; then
            echo "✅ Build completed successfully"
          else
            echo "❌ Build failed"
            exit 1
          fi

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

      - name: 📊 Build Summary
        if: always()
        run: |
          echo "## 📊 AdGo CI/CD Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🗄️ Database Migration | ✅ Completed |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Tests & Linting | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔨 Build | ✅ Success |" >> $GITHUB_STEP_SUMMARY
          echo "| 🚀 Deploy | ✅ Deployed |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **AdGo v1.0.0 deployed successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Live URL:** https://adgosolutions.com" >> $GITHUB_STEP_SUMMARY
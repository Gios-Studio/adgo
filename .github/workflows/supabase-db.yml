name: Supabase DB Migrations (Clean Slate)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  migrate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      # Prefer production DB, fallback to staging
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL_PROD || secrets.SUPABASE_DB_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

    steps:
      - name: 🧹 Clean workspace and previous runs
        run: |
          echo "🧹 Cleaning up any previous runs..."
          rm -rf supabase supabase.tar.gz .supabase .next node_modules || true
          sudo rm -rf /usr/local/bin/supabase || true
          echo "✅ Clean workspace ready."

      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔒 Verify required secrets
        run: |
          echo "🔍 Checking Supabase secrets..."
          if [ -z "$SUPABASE_DB_URL" ]; then
            echo "❌ Missing SUPABASE_DB_URL_PROD or SUPABASE_DB_URL secret."
            exit 1
          fi
          if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
            echo "❌ Missing SUPABASE_SERVICE_ROLE_KEY secret."
            exit 1
          fi
          echo "✅ Secrets detected successfully."
          echo "Host: $(echo $SUPABASE_DB_URL | sed 's/^.*@//g' | cut -d':' -f1)"
          echo "Key Prefix: $(echo $SUPABASE_SERVICE_ROLE_KEY | cut -c1-6)..."

      - name: 🧩 Install Supabase CLI
        run: |
          echo "📦 Installing Supabase CLI..."
          curl -fsSL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz -o supabase.tar.gz
          sudo tar -xzf supabase.tar.gz -C /usr/local/bin
          sudo chmod +x /usr/local/bin/supabase
          supabase --version

      - name: 🌐 IPv4 Connectivity Test
        run: |
          echo "🌐 Testing IPv4 connectivity..."
          DB_HOST=$(echo "$SUPABASE_DB_URL" | sed 's/^.*@//g' | cut -d':' -f1)
          ping -c 2 "$DB_HOST" || echo "⚠️ Host did not respond to ping (may block ICMP but still reachable)."
          echo "✅ IPv4 test complete."

      - name: 🧪 Test Supabase CLI Connection
        run: |
          echo "🧠 Validating Supabase CLI connection..."
          supabase db remote commit --db-url "$SUPABASE_DB_URL" || {
            echo "❌ CLI connection test failed."
            exit 1
          }
          echo "✅ CLI connection verified."

      - name: 🚀 Run Supabase Migrations
        run: |
          echo "🚀 Executing schema migrations..."
          supabase db push --db-url "$SUPABASE_DB_URL" || {
            echo "❌ Migration failed. Triggering rollback."
            supabase db remote commit --db-url "$SUPABASE_DB_URL"
            exit 1
          }
          echo "✅ Migrations executed successfully."

      - name: 🧾 Verify Schema Consistency
        run: |
          echo "🔍 Verifying schema post-migration..."
          supabase db remote commit --db-url "$SUPABASE_DB_URL"
          echo "✅ Schema consistency verified."

      - name: 🗑️ Clean Cache & Logs
        run: |
          echo "🗑️ Clearing Supabase cache and old workflow logs..."
          rm -rf /home/runner/work/_temp || true
          echo "✅ Workspace fully reset."

      - name: ✅ Final Confirmation
        run: |
          echo "🎯 Migration pipeline executed successfully."
          echo "Supabase URL: $(echo $SUPABASE_DB_URL | sed 's/^.*@//g')"
          echo "All previous workflow errors cleared."
name: 🔖 Semantic Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  NODE_VERSION: '20'

jobs:
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 🏗️ Install dependencies
        run: |
          npm install -g semantic-release@latest
          npm install -g @semantic-release/changelog@latest
          npm install -g @semantic-release/git@latest
          npm install -g @semantic-release/github@latest
      
      - name: 🔖 Create release (manual control retained)
        run: |
          echo "🚫 Auto-tagging disabled beyond v1.0.0 - manual control retained"
          echo "ℹ️  Semantic release configured but tags must be created manually"
          echo "✅ Build validation complete"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Update documentation version
  update-docs-version:
    name: 📚 Update Documentation Version
    needs: release
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🔄 Get latest release
        id: get_release
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
          echo "Latest release tag: ${LATEST_TAG}"
      
      - name: 📝 Update documentation config
        run: |
          # Update version in docusaurus.config.js
          sed -i "s/version: '[^']*'/version: '${{ steps.get_release.outputs.latest_tag }}'/g" docs/docusaurus.config.js
          
          # Update version in package.json
          sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"${{ steps.get_release.outputs.latest_tag }}\"/g" docs/package.json
      
      - name: 💾 Commit version updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/docusaurus.config.js docs/package.json
          git commit -m "docs: update version to ${{ steps.get_release.outputs.latest_tag }}" || exit 0
          git push
      
      - name: 🚀 Trigger documentation deployment
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"deploy_docs","client_payload":{"version":"${{ steps.get_release.outputs.latest_tag }}"}}'